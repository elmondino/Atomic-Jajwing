// ----------------------------------------------------------------------

// Tools: font-size

// ----------------------------------------------------------------------

////
/// @author   Jaywing
/// @group    jw
/// @create   14/06/2016
////

/// Helper mixins for font-sizes used in conjuction with the
/// `gel-typography` library.
///
/// @example scss
///   .MyHero {
///     @include canon-bold;
///   }

@mixin canon {
  @include gel-typography('canon');
}

@mixin canon-bold {
  @include gel-typography('canon-bold');
}

@mixin trafalgar {
  @include gel-typography('trafalgar');
}

@mixin trafalgar-bold {
  @include gel-typography('trafalgar-bold');
}

@mixin double-pica {
  @include gel-typography('double-pica');
}

@mixin double-pica-bold {
  @include gel-typography('double-pica-bold');
}

@mixin great-primer {
  @include gel-typography('great-primer');
}

@mixin great-primer-bold {
  @include gel-typography('great-primer-bold');
}

@mixin pica {
  @include gel-typography('pica');
}

@mixin pica-bold {
  @include gel-typography('pica-bold');
}

@mixin long-primer {
  @include gel-typography('long-primer');
}

@mixin long-primer-bold {
  @include gel-typography('long-primer-bold');
}

@mixin brevier {
  @include gel-typography('brevier');
}

@mixin brevier-bold {
  @include gel-typography('brevier-bold');
}

@mixin minion {
  @include gel-typography('minion');
}

@mixin minion-bold {
  @include gel-typography('minion-bold');
}

@mixin body-copy {
  @include font-size($fs-body);
}

@mixin body-copy-bold {
  @include gel-typography('body-copy-bold');
}

@mixin font-size($fs-map, $fs-breakpoints: $mq-breakpoints) {
  @each $fs-breakpoint, $fs-font-size in $fs-map {
    @if $fs-breakpoint == null {
      @include make-font-size($fs-font-size);
    } @else {
      // If $fs-font-size is a key that exists in
      // $fs-breakpoints, use the value
      @if map-has-key($fs-breakpoints, $fs-breakpoint) {
        $fs-breakpoint: map-get($fs-breakpoints, $fs-breakpoint);
      }
      @media screen and (min-width: $fs-breakpoint) {
        @include make-font-size($fs-font-size);
      }
    }
  }
}

// Utility function for mixin font-size
@mixin make-font-size($fs-font-size) {
  // If $fs-font-size is a list, include
  // both font-size and line-height
  @if type-of($fs-font-size) == 'list' {
    font-size: nth($fs-font-size, 1);
    @if (length($fs-font-size) > 1) {
      line-height: nth($fs-font-size, 2);
    }
  } @else {
    font-size: $fs-font-size;
  }
}

// prop-value mixin
//
// Loops through a map and outputs each key/value
// as a css property/value.
@mixin prop-value($map) {
  @each $prop, $value in $map {
    #{$prop}: #{$value};
  }
}

// Typography mixin
//
// Gets the designated style name and outputs any
// key/values set in the “base”. After that, it loops
// through the media queries and sets up the
// responsive typography
@mixin typography($element) {
  $map: map-get($typography, $element);
  $base: map-get($map, base);

  @include prop-value($base);

  $mq: map-remove($map, base);

  @each $bp, $attr in $mq {
    @include mq($bp) {
      @include prop-value($attr);
    }
  }
}
